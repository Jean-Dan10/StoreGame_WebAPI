// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreGame_WebAPI.Data;

#nullable disable

namespace StoreGame_WebAPI.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20230831004237_initial3")]
    partial class initial3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommandeJeu", b =>
                {
                    b.Property<int>("CommandesIdCommande")
                        .HasColumnType("int");

                    b.Property<int>("JeuxIdJeu")
                        .HasColumnType("int");

                    b.HasKey("CommandesIdCommande", "JeuxIdJeu");

                    b.HasIndex("JeuxIdJeu");

                    b.ToTable("CommandeJeu");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idClient");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("AdresseCourriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdressePhysique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompteUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.HasIndex("CompteUser");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Commande", b =>
                {
                    b.Property<int>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCommande");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCommande"));

                    b.Property<bool>("Panier")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdCommande");

                    b.HasIndex("User");

                    b.ToTable("Commande2");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Compte", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User");

                    b.ToTable("Compte");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGenre");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenre"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenre");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Jeu", b =>
                {
                    b.Property<int>("IdJeu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idJeu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJeu"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomJeu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("IdJeu");

                    b.HasIndex("IdGenre");

                    b.ToTable("Jeu");
                });

            modelBuilder.Entity("CommandeJeu", b =>
                {
                    b.HasOne("StoreGame_WebAPI.entities.Commande", null)
                        .WithMany()
                        .HasForeignKey("CommandesIdCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreGame_WebAPI.entities.Jeu", null)
                        .WithMany()
                        .HasForeignKey("JeuxIdJeu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Client", b =>
                {
                    b.HasOne("StoreGame_WebAPI.entities.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("CompteUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Commande", b =>
                {
                    b.HasOne("StoreGame_WebAPI.entities.Compte", "Compte")
                        .WithMany("Commandes")
                        .HasForeignKey("User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Jeu", b =>
                {
                    b.HasOne("StoreGame_WebAPI.entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("StoreGame_WebAPI.entities.Compte", b =>
                {
                    b.Navigation("Commandes");
                });
#pragma warning restore 612, 618
        }
    }
}
